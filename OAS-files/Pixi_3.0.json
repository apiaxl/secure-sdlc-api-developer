{
  "openapi": "3.0.0",
  "info": {
    "description": "Pixi Photo Sharing API",
    "version": "1.0.0",
    "title": "Pixi App API",
    "contact": {
      "email": "nicole.becher@owasp.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "admins",
      "description": "Secured Admin-only calls"
    },
    {
      "name": "users",
      "description": "Operations available to regular, logged in users"
    },
    {
      "name": "anyone",
      "description": "Operations available to anyone"
    }
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "anyone"
        ],
        "x-42c-no-authentication": true,
        "summary": "login successfully and receive json web token.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "user": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 40,
                    "pattern": "^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+).([a-zA-Z]{2,5})$"
                  },
                  "pass": {
                    "type": "string",
                    "format": "password",
                    "minLength": 12,
                    "maxLength": 12,
                    "pattern": "^[\\w&@#!?]{12,12}$"
                  }
                },
                "required": [
                  "user",
                  "pass"
                ]
              }
            }
          }
        },
        "operationId": "authenticate",
        "description": "user supplies user name and password and receives a json web token",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    },
                    "token": {
                      "type": "string",
                      "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "message",
                    "token"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "successfully request, but invalid password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "missing parameters"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "anyone"
        ],
        "x-42c-no-authentication": true,
        "summary": "register for an account and receive token",
        "operationId": "register",
        "description": "user supplies email and password to register and receives a json web\ntoken.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successfully registered, token received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenMessage"
                }
              }
            }
          },
          "202": {
            "description": "email address already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/info": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get user information",
        "operationId": "userinfo",
        "description": "user supplies valid token and receives all user info",
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "description": "Users JWT Token",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 1000,
              "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful authentication sent user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "minItems": 0,
                  "maxItems": 50,
                  "items": {
                    "$ref": "#/components/schemas/UsersItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/user/edit_info": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "edit user information",
        "operationId": "edituserinfo",
        "description": "user supplies valid token and updates all user info",
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 1000,
              "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationData"
              }
            }
          },
          "description": "userobject",
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful authentication sent user information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",

                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "invalid or missing token"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ]
      }
    },
    "/api/admin/users/search": {
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "search for a specific user",
        "description": "search for a specific user",
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 1000,
              "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "search query ?search=xxx",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 100,
              "pattern": "^[\\w\\s\\.@=]{1,50}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful authentication user photo json object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "minItems": 0,
                  "maxItems": 50,
                  "items": {
                    "$ref": "#/components/schemas/UsersItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "invalid or missing token"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "operationId": "search for a specific user"
      }
    },
    "/api/admin/all_users": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "minItems": 0,
                  "maxItems": 50,
                  "items": {
                    "$ref": "#/components/schemas/UsersItem"
                  }
                }
              }
            }
          },
          "403": {
            "description": "No token provided or invalid token."
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "message": {
                      "type": "string",
                      "pattern": "^[\\w\\s\\.@:-]{1,255}$",
                      "minLength": 1,
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "admins"
        ],
        "summary": "Returns the list of ALL users. Must be admin to call.",
        "security": [
          {
            "access-token": []
          }
        ],
        "description": "Returns the list of ALL users. Must be admin to call.",
        "operationId": "adminallusers"
      }
    }
  },
  "servers": [
    {
      "url": "https://pixi.qa.42crunch.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "access-token": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token",
        "description": "Most operations need to pass a user token retrieved calling /api/login"
      }
    },
    "schemas": {
      "UsersItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "number",
            "format": "integer",
            "minimum": 0,
            "maximum": 999999,
            "example": 1
          },
          "pic": {
            "type": "string",
            "format": "uri",
            "pattern": "\\w+:(\\/?\\/?)[^\\s]+",
            "maxLength": 200,
            "example": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
            "minLength": 10,
            "maxLength": 50,
            "example": "email@email.com"
          },
          "password": {
            "type": "string",
            "format": "string",
            "pattern": "^[a-zA-Z0-9&@#!?]{1,12}$",
            "maxLength": 12,
            "example": "p@ssword1"
          },
          "name": {
            "type": "string",
            "example": "Johnny Appleseed",
            "pattern": "^[a-zA-Z0-9 ]{1,30}$",
            "maxLength": 50
          },
          "is_admin": {
            "description": "is admin",
            "type": "boolean"
          },
          "account_balance": {
            "description": "remaining balance",
            "type": "number",
            "format": "float",
            "minimum": 0,
            "maximum": 999999
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserRegistrationData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "user",
          "pass",
          "name",
          "is_admin",
          "account_balance"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 99999999999
          },
          "user": {
            "type": "string",
            "format": "email",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
            "minLength": 1,
            "maxLength": 50
          },
          "pass": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9&@#!?]{1,12}$",
            "minLength": 1,
            "maxLength": 12
          },
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9 ]{1,30}$",
            "minLength": 1,
            "maxLength": 30
          },
          "is_admin": {
            "type": "boolean"
          },
          "account_balance": {
            "type": "number",
            "format": "float",
            "minimum": 1,
            "maximum": 1000
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "pattern": "^[\\w\\s\\.@:-]{1,255}$",
            "minLength": 1,
            "maxLength": 255
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "TokenMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "pattern": "^[\\w\\s\\.@:-]{1,255}$",
            "minLength": 1,
            "maxLength": 255
          },
          "token": {
            "type": "string",
            "pattern": "^([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_=]{4,})\\.([a-zA-Z0-9_\\-\\+\\/=]{4,})",
            "maxLength": 1000
          }
        }
      }
    }
  }
}